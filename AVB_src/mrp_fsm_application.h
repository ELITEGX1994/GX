
// mrp_fsm_application.h

typedef enum enumMrpStateAppl{
    MRP_STATE_APPL_VO,
    MRP_STATE_APPL_VP,
    MRP_STATE_APPL_VN,
    MRP_STATE_APPL_AN,
    MRP_STATE_APPL_AA,
    MRP_STATE_APPL_QA,
    MRP_STATE_APPL_LA,
    MRP_STATE_APPL_AO,
    MRP_STATE_APPL_QO,
    MRP_STATE_APPL_AP,
    MRP_STATE_APPL_QP,
    MRP_STATE_APPL_LO,
    MRP_STATE_APPL_MAX
}MRP_STATE_APPL_E;

typedef enum enumMrpEvtAppl{
    MRP_EVT_APPL_BEGIN,
    MRP_EVT_APPL_NEW,
    MRP_EVT_APPL_JOIN,
    MRP_EVT_APPL_LV,
    MRP_EVT_APPL_RNEW,
    MRP_EVT_APPL_RJOININ,
    MRP_EVT_APPL_RIN,
    MRP_EVT_APPL_RJOINMT,
    MRP_EVT_APPL_RMT,
    MRP_EVT_APPL_RLV,
    MRP_EVT_APPL_RLA,
    MRP_EVT_APPL_REDECLARE,
    MRP_EVT_APPL_PERIODIC,
    MRP_EVT_APPL_TX,
    MRP_EVT_APPL_TXLA,
    MRP_EVT_APPL_TXLAF,
    MRP_EVT_APPL_MAX
}MRP_EVT_APPL_E

typedef enum enumMrpPAAppl
{
    MRP_PA_APPL_S,
    MRP_PA_APPL_SN,
    MRP_PA_APPL_SJ,
    MRP_PA_APPL_SL,
    MRP_PA_APPL_SJ_OPT,
    MRP_PA_APPL_S_OPT,
    //MRP_PA_APPL_REQOPPOPORTUNITY,
    MRP_PA_APPL_MAX
}MRP_PA_APPL_E;

typedef enum enumMrpTxType
{
    MRP_TX_TYPE_TX,
    MRP_TX_TYPE_TXLA,
    MRP_TX_TYPE_MAX
}MRP_TX_TYPE_E;